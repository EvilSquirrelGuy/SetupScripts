## DO NOT EDIT THIS FILE
## it's ok to edit config options

## last updated: 10:30 15/08/2023 BST

## SCRIPT CONFIG START

# Script config options
# - For boolean values:
#   - $true means on
#   - $false means off
# - If a config option is set as a number keep it as a number
# - If the value is wrapped in quote marks "like this", keep the quote marks

  $enableWindowsTerminal    =   $true     # enable windows terminal installaton
  $enableFirefox            =   $true     # enable firefox in browser selector
  $enableChrome             =   $false    # enable chrome in browser selector
  $enableDiscord            =   $true     # enable discord installation
  $enableVSCode             =   $true     # enable vs code installation
  $enableCollapse           =   $true     # enable collapse launcher installation (that being said you don't have a choice)
  $enablePrismLauncher      =   $true     # enable prism launcher installation
  $enableSteam              =   $true     # enable steam installation
  $enableSpotify            =   $true     # enable spotify installation
  $enableFeishin            =   $true     # enable feishin installation
  # piracy options *FOR EDUCATIONAL PURPOSES ONLY*
  $pirateWindows            =   $false     # pirates windows activation
  $pirateOffice             =   $false     # downloads and pirates ms office

## SCRIPT CONFIG END
# make the user review the config
Write-Host "Please review the configuration options before proceeding." -BackgroundColor DarkBlue -ForegroundColor White

Write-Host ""
Write-Host "Program Installation Settings:" -ForegroundColor DarkBlue
Write-Host ""

Write-Host "Windows Terminal Installation:    " -NoNewline -ForegroundColor Gray
Write-Host $(if($enableWindowsTerminal){"on"}else{"off"}) -ForegroundColor $(if($enableWindowsTerminal){"Blue"}else{"Red"})

Write-Host "Firefox Installation:             " -NoNewline -ForegroundColor Gray
Write-Host $(if($enableFirefox){"on"}else{"off"}) -ForegroundColor $(if($enableFirefox){"Blue"}else{"Red"})

Write-Host "Chrome Installation:              " -NoNewline -ForegroundColor Gray
Write-Host $(if($enableChrome){"on"}else{"off"}) -ForegroundColor $(if($enableChrome){"Blue"}else{"Red"})

Write-Host "Discord Installation:             " -NoNewline -ForegroundColor Gray
Write-Host $(if($enableDiscord){"on"}else{"off"}) -ForegroundColor $(if($enableDiscord){"Blue"}else{"Red"})

Write-Host "VS Code Installation:             " -NoNewline -ForegroundColor Gray
Write-Host $(if($enableVSCode){"on"}else{"off"}) -ForegroundColor $(if($enableVSCode){"Blue"}else{"Red"})

Write-Host "Genshin Installation:             " -NoNewline -ForegroundColor Gray
Write-Host $(if($enableGenshin){"on"}else{"off"}) -ForegroundColor $(if($enableGenshin){"Blue"}else{"Red"})

Write-Host "PrismLauncher Installation:       " -NoNewline -ForegroundColor Gray
Write-Host $(if($enablePrismLauncher){"on"}else{"off"}) -ForegroundColor $(if($enablePrismLauncher){"Blue"}else{"Red"})

Write-Host "Steam Installation:               " -NoNewline -ForegroundColor Gray
Write-Host $(if($enableSteam){"on"}else{"off"}) -ForegroundColor $(if($enableSteam){"Blue"}else{"Red"})

Write-Host "Spotify Installation:             " -NoNewline -ForegroundColor Gray
Write-Host $(if($enableSpotify){"on"}else{"off"}) -ForegroundColor $(if($enableSpotify){"Blue"}else{"Red"})

Write-Host "Feishin Installation:             " -NoNewline -ForegroundColor Gray
Write-Host $(if($enableFeishin){"on"}else{"off"}) -ForegroundColor $(if($enableSpotify){"Blue"}else{"Red"})

Write-Host ""
Write-Host "Pirate Settings:" -BackgroundColor Red
Write-Host ""

Write-Host "Windows Activation:               " -NoNewline -ForegroundColor DarkRed
Write-Host $(if($pirateWindows){"on"}else{"off"}) -ForegroundColor $(if($enableSteam){"Blue"}else{"Red"})

Write-Host "Office Download + Activate:       " -NoNewline -ForegroundColor DarkRed
Write-Host $(if($pirateOffice){"on"}else{"off"}) -ForegroundColor $(if($enableSteam){"Blue"}else{"Red"})

Write-Host ""
Write-Host "If you would like to enable/disable some of these settings, exit the script and edit the config section at the top of the file"
Write-Host ""

$continue = Read-Host "Would you like to continue running the script? (Y/n)"
if ($continue -ieq "n") {
  Exit
} else {
  Clear-Host
}

# check for admin and launch with admin if not found
# no i did not write this myself, i yoinked it from https://github.com/Sycnex/Windows10Debloater/blob/master/Windows10Debloater.ps1
If (!([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]'Administrator')) {
    Write-Host "You didn't run this script as an Administrator. This script will self elevate to run as an Administrator and continue."
    Start-Process powershell.exe -ArgumentList ("-NoProfile -ExecutionPolicy Bypass -File `"{0}`"" -f $PSCommandPath) -Verb RunAs
    Exit
}

# make folder to cache all downloaded files
Set-Location "$PSScriptRoot"
Get-Location
if (-not$(Test-Path "win_setup_temp")) {
  New-Item -Path "$PSScriptRoot" -Name "win_setup_temp" -ItemType "directory"
}
Set-Location "win_setup_temp" 
# check if we already have winget
Write-Host "This script requires winget and will install it automatically" -ForegroundColor Yellow
try {
  winget -v | Out-Null
  Write-Host "Winget was found, continuing..." -ForegroundColor Green
} catch {
  # download and install winget package manager
  Write-Host "Winget was not found, installing..." -ForegroundColor Red
  Invoke-WebRequest "https://github.com/microsoft/winget-cli/releases/download/v1.3.2691/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle" -OutFile Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle
  Add-AppPackage -path "Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle"
}

# debloater script

Write-Host "Run debloater script?" -ForegroundColor DarkBlue
$choice = Read-Host "Enter choice (Y/n)"
if ($choice -ieq "n") {
  Write-Host "Skipping debloater script" -ForegroundColor Red
} else {
  Write-Host "Running debloater script..." -ForegroundColor DarkBlue
  . {Invoke-WebRequest "https://raw.githubusercontent.com/Sycnex/Windows10Debloater/master/Windows10Debloater.ps1"} | Invoke-Expression;
}

# === INSTALL PROGRAMS ===

Write-Host "======= BROWSER INSTALLATION =======" -BackgroundColor DarkBlue -ForegroundColor White
Write-Host "This script deletes microsoft edge, if you want to keep it uhh... don't, its garbage!" -ForegroundColor DarkBlue
winget uninstall Microsoft.Edge

# installs browser(s)

# if firefox installation is enabled or neither are enabled

if ($enableFirefox -or !($enableFirefox -or $enableChrome) ) {
  $firefoxVersions = "Mozilla.Firefox", "Mozilla.Firefox.Beta", "Mozilla.Firefox.DeveloperEdition"

  for ($i = 1; $i -le $firefoxVersions.length; $i = $i+1) {
    Write-Host "  " $i " : " $firefoxVersions[$($i-1)]
  }
  Write-Host "   S  :  Skip this step"

  $choice = Read-Host "Enter your selection (1-$($i-1))"

  if ($choice -ieq "s") {
    Write-Host "Skipping firefox installation" -ForegroundColor Yellow
  } else {
    winget install --id $firefoxVersions[$choice-1]
  }
} else { Write-Host "Skipping firefox installation" -ForegroundColor Yellow }

# install chrome if config is on
if ($enableChrome) {
  $chromeVersions = "Google.Chrome", "Google.Chrome.Beta", "Google.Chrome.Dev", "Google.Chrome.Canary"
  for ($i = 1; $i -le $chromeVersions.length; $i = $i+1) {
    Write-Host "  " $i " : " $chromeVersions[$($i-1)]
  }
  Write-Host "   S  :  Skip this step"

  $choice = Read-Host "Enter your selection (1-$($i-1))"

  if ($choice -ieq "s") {
    Write-Host "Skipping chrome installation" -ForegroundColor Yellow
  } else {
    winget install --id $chromeVersions[$choice-1]
  }
} else { Write-Host "Skipping chrome installation" -ForegroundColor Yellow }

# now we install discord
if ($enableDiscord) {
  Write-Host "======= DISCORD INSTALLATION =======" -BackgroundColor DarkBlue -ForegroundColor White
  Write-Host "Yes you need discord" - ForegroundColor DarkBlue

  $discordVersions = "Discord.Discord", "Discord.Discord.PTB", "Discord.Discord.Canary"
  for ($i = 1; $i -le $discordVersions.length; $i = $i+1) {
    Write-Host "  " $i " : " $discordVersions[$($i-1)]
  }
  Write-Host "   S  :  Skip this step"

  $choice = Read-Host "Enter your selection (1-$($i-1))"

  if ($choice -ieq "s") {
    Write-Host "Skipping discord installation" -ForegroundColor Yellow
  } else {
    winget install --id $discordVersions[$choice-1]
  }
} else { Write-Host "Skipping discord installation" -ForegroundColor Yellow }

# now we install vs code
if ($enableVSCode) {
  Write-Host "======= VS CODE INSTALLATION =======" -BackgroundColor DarkBlue -ForegroundColor White
  Write-Host "May your code forever look like shit, just like my script!" -ForegroundColor DarkBlue

  $vscodeVersions = "Microsoft.VisualStudioCode", "Microsoft.VisualStudioCode.Insiders"
  for ($i = 1; $i -le $vscodeVersions.length; $i = $i+1) {
    Write-Host "  " $i " : " $vscodeVersions[$($i-1)]
  }
  Write-Host "   S  :  Skip this step"

  $choice = Read-Host "Enter your selection (1-$($i-1))"

  if ($choice -ieq "s") {
    Write-Host "Skipping vs code installation" -ForegroundColor Yellow
  } else {
    winget install --id $vscodeVersions[$choice-1]
  }
} else { Write-Host "Skipping vs code installation" -ForegroundColor Yellow }

if ($enableWindowsTerminal) {
  Write-Host "======= WINDOWS TERMINAL INSTALLATION =======" -BackgroundColor DarkBlue -ForegroundColor White
  Write-Host "It looks prettier than default terminal" -ForegroundColor DarkBlue

  $terminalVersions = "Microsoft.WindowsTerminal", "Microsoft.WindowsTerminal.Preview"
  for ($i = 1; $i -le $terminalVersions.length; $i = $i+1) {
    Write-Host "  " $i " : " $terminalVersions[$($i-1)]
  }
  Write-Host "   S  :  Skip this step"

  $choice = Read-Host "Enter your selection (1-$($i-1))"

  if ($choice -ieq "s") {
    Write-Host "Skipping windows terminal installation" -ForegroundColor Yellow
  } else {
    winget install --id $terminalVersions[$choice-1]
  }
} else { Write-Host "Skipping windows terminal installation" -ForegroundColor Yellow }

#if ($enableGenshin) { # this was just a proof-of-concept, genshin will install itself anyway
  Write-Host "======= COLLAPSE LAUNCHER INSTALLATION =======" -BackgroundColor DarkBlue -ForegroundColor White
  Write-Host "Play Genshin Impact today! (You don't have a choice)" -ForegroundColor DarkBlue
  # install collapse launcher using winget
  winget install --id Collpase.Collapse
#} else { Write-Host "Skipping genshin impact installation" -ForegroundColor Yellow }

if ($enablePrismLauncher) {
  Write-Host "======= PRISMLAUNCHER INSTALLATION =======" -BackgroundColor DarkBlue -ForegroundColor White
  Write-Host "PolyMC is dead, long live prismlauncher" -ForegroundColor DarkBlue
  winget install --id PrismLauncher.PrismLauncher
} else { Write-Host "Skipping prismlauncher installation" -ForegroundColor Yellow }

if ($enableSteam) {
  Write-Host "======= STEAM INSTALLATION =======" -BackgroundColor DarkBlue -ForegroundColor White
  Write-Host "gamer moment" -ForegroundColor DarkBlue
  winget install --id Valve.Steam
} else { Write-Host "Skipping steam installation" -ForegroundColor Yellow }

if ($enableSpotify) {
  Write-Host "======= SPOTIFY INSTALLATION =======" -BackgroundColor DarkBlue -ForegroundColor White
  Write-Host "Or as I like to call it, app that lets you listen to k-pop" -ForegroundColor DarkBlue
  winget install --id Spotify.Spotify
} else { Write-Host "Skipping spotify installation" -ForegroundColor Yellow }

if ($enableFeishin) {
  Write-Host "======= FEISHIN INSTALLATION =======" -BackgroundColor DarkBlue -ForegroundColor White
  Write-Host "Like spotify but for jellyfin server with my own music" -ForegroundColor DarkBlue
  winget install --id jeffvli.Feishin
} else { Write-Host "Skipping feishin installation" -ForegroundColor Yellow }

## === PIRACY PART ===
# only for educational purposes

if ($pirateWindows) {
  Write-Host "======= WINDOWS ACTIVATION =======" -BackgroundColor Red -ForegroundColor White
  Write-Host "*FOR EDUCATIONAL PURPOSES ONLY* This OS isn't worth your money" -ForegroundColor Red
  Write-Host "NOTICE: Windows may flag the activator script as a virus, it's not, it just activates windows, fuck microsoft" -ForegroundColor Red

  Start-Process powershell {(Invoke-WebRequest "https://download1647.mediafire.com/muft7nc2sjjg/h7lczkiyx4k1i2r/activate.bat").Content | cmd.exe}
  # Start-Process powershell {cmd /c activate.bat}
}

if ($pirateOffice) {
  Write-Host "======= DOWNLOAD & ACTIVATE OFFICE =======" -BackgroundColor Red -ForegroundColor White
  Write-Host "*FOR EDUCATIONAL PURPOSES ONLY*" -ForegroundColor Red
  Write-Host "NOTICE: Windows may flag the activator script as a virus, it's not, it just activates office, fuck microsoft" -ForegroundColor Red

  # download aria2c to download faster
  Invoke-WebRequest "https://github.com/aria2/aria2/releases/download/release-1.36.0/aria2-1.36.0-win-64bit-build1.zip" -OutFile "aria2-1.36.0-win-64bit-build1.zip"
  Expand-Archive "aria2-1.36.0-win-64bit-build1.zip" -DestinationPath .
  Move-Item "aria2-1.36.0-win-64bit-build1/aria2c.exe" ./aria2c.exe
  Write-Host "WARNING: This download will take a while, and probably slow down your network" -ForegroundColor Red
  # made it a bit sparing, yes, these numbers can go up to 16, but that will make your internet unusable so... yeah not recommended...
  ./aria2c.exe -x 8 -s 8 "https://officecdn.microsoft.com/db/492350F6-3A01-4F97-B9C0-C7C6DDF67D60/media/en-US/ProPlus2019Retail.img" # i had this link lying around for a while

  $mountResult = Mount-DiskImage ProPlus2019Retail.img -PassThru
  $driveLetter = ($mountResult | Get-Volume).DriveLetter
  Invoke-Expression "$driveLetter\Office\Setup64.exe"

  StartProcess powershell {(Invoke-WebRequest "https://download1076.mediafire.com/qvc6koosjzgg/j8uubzwt25z8hgo/activateoffice19.bat").Content | cmd.exe}
  # Start-Process powershell {cmd /c activate_office.bat}
}

Write-Host "Setup Completed" -BackgroundColor Green
Write-Host "Press return to exit..." -NoNewLine -ForegroundColor Yellow
Remove-Item 
Read-Host
